运行此脚本需要第三方库tensorflow2.x cpu版
文件结构：
	code 文件夹下有四个python文件 pre.py, SPP.py, AGGSPP.py,train.py
	images 文件夹下有 figNew 文件夹，figNew 文件夹下还有 4 个文件夹，分别存放四类图片文件
	code 与 images 在同一目录下，同时，此目录下也有生成的各个参数文件、准确率文件、可视化文件、训练集和测试集文件名文件
模型采用 VGG16 结合 SPP
传统CNN模型只能处理输入图片尺寸相同时的情况，加入SPP池化层，便可解决
为了对比，图形输入采用四种形式：
	尺寸相同下，输入BGR或灰度图像
	混合尺寸下，输入BGR或灰度图像
该模型卷积和池化时的padding都为same
均为最大值池化
设图片宽，高，通道分别为 w,h,c
结构为：
	输入：w*h*c （BGR时为3，灰度时为1)
	卷积：64 个 3*3*3 的卷积核(filter)，步长(stride)为 1，2 次，输出：w*h*64
	池化：减半池化，输出：(w/2)*(h/2)*64
	卷积：128 个 3*3*64 的 filter， stride 为 1，2 次，输出：(w/2)*(h/2)*128
	池化：减半池化，输出：(w/2)*(h/4)*128
	卷积：256 个 3*3*128 的 filter， stride 为 1，3 次，输出：(w/4)*(h/4)*256
	池化：减半池化，输出：(w/8)*(h/8)*256
	卷积：512 个 3*3*256 的 filter， stride 为 1，3 次，输出：(w/8)*(h/8)*512
	池化：减半池化，输出：(w/16)*(h/16)*512
	卷积：512 个 3*3*512 的 filter， stride 为 1，3 次，输出：(w/16)*(h/16)*512
	池化：减半池化，输出：(w/32)*(h/32)*512
	再次池化：SPP 池化，有 3 层，分别为 1*1，2*2，4*4，flatten 后拼接，输出 (1+9+16) * 512 = 10,752 个特征
	全连接：有 3 层，units 个数分别为 4096, 4096, 1000
	输出：利用 softmax 输出图片属于各类的概率

训练方法：小批量梯度下降并用momentum进行学习率自我衰减
代价函数：交叉熵
batch大小：16
epoch大小：20